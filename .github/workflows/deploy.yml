name: Deploy to EC2

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

    steps:
      # Checkout do código do repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # Configurar SSH para acesso à EC2
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/mykeys.pem
          chmod 600 ~/.ssh/mykeys.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # Gerar arquivo .env
      - name: Generate .env file
        run: |
          cat << EOF > .env
          VITE_APP_NAME=${{ secrets.VITE_APP_NAME }}
          VITE_APP_HOST=${{ secrets.VITE_APP_HOST }}
          VUE_APP_API_URL=${{ secrets.VUE_APP_API_URL }}
          BACKEND_URL=${{ secrets.BACKEND_URL }}
          EOF

      # Copiar arquivos para a EC2
      - name: Copy files to EC2
        run: |
          rsync -avz --exclude '.git' -e "ssh -i ~/.ssh/mykeys.pem" . ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/importsjpe

      # Executar Docker Compose na EC2 via SSH
      - name: Deploy with Docker Compose
        run: |
          ssh -i ~/.ssh/mykeys.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/${{ secrets.EC2_USER }}/importsjpe
            docker-compose -f docker-compose.yml down --remove-orphans
            docker-compose -f docker-compose.yml up -d --build
          EOF
          